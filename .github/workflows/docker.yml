name: Docker

on:
  workflow_call:
    inputs:
      push:
        description: 'Whether to push the image'
        required: false
        default: false
        type: boolean
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
        type: string
      registry:
        description: 'Docker registry'
        required: false
        default: 'ghcr.io'
        type: string
    secrets:
      REGISTRY_USERNAME:
        required: false
      REGISTRY_PASSWORD:
        required: false
  workflow_dispatch:
    inputs:
      push:
        description: 'Whether to push the image'
        required: false
        default: false
        type: boolean
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
        type: string
      registry:
        description: 'Docker registry'
        required: false
        default: 'ghcr.io'
        type: string

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: inputs.push
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
        password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=${{ inputs.tag }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Generate SBOM
      if: inputs.push
      uses: anchore/sbom-action@v0
      with:
        image: ${{ inputs.registry }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}
        format: spdx-json
        output-file: sbom.spdx.json

    - name: Upload SBOM
      if: inputs.push
      uses: actions/upload-artifact@v4
      with:
        name: sbom
        path: sbom.spdx.json 